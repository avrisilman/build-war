<?xml version="1.0" encoding="UTF-8"?>  
  <beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop = "http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
 		http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/aop 
   		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
     
    <context:property-placeholder location="classpath:application.properties" />
     
    <tx:annotation-driven />
	<context:annotation-config />
    <context:component-scan base-package="jatis.va" />
<!--     <context:component-scan base-package="jatis.va.core.dao" /> -->
	<context:component-scan base-package="jatis.va.core.service" />	
	<context:component-scan base-package="jatis.va.main.controller" />
     
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<property name="connectionTimeout" value="60000" />
		<property name="dataSourceClassName" value="org.postgresql.ds.PGPoolingDataSource" />
		<property name="maximumPoolSize" value="10" />
		<property name="maxLifetime" value="120000" />
		<property name="idleTimeout" value="120000" />
		<property name="leakDetectionThreshold" value="600000" />
<!-- 		<property name="connectionTestQuery" value="SELECT 1 " /> -->
<!-- 		<property name="validationQuery" value="${jdbc.validationQuery}" /> -->
		<property name="dataSourceProperties">
			<props>
				<prop key="serverName">${jdbc.url}</prop>
				<prop key="databaseName">${jdbc.dbname}</prop>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
			</props>
		</property>
	</bean>
    
     
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:jatis/va/core/domain/mapping/hibernate/hibernate.cfg.xml" />
<!-- 		<property name="configLocation" value="classpath:hibernate.cfg.xml" /> -->
<!-- 		<property name="mappingLocations" value="classpath*:jatis/va/core/domain/mapping/hibernate/*.hbm.xml" /> -->
<!-- 		<property name="mappingLocations" value="classpath*:hibernate.cfg.xml" /> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl_auto}</prop>
	
			</props>
		</property>
	</bean>
 
    <bean id="transactionManager"  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    

</beans>